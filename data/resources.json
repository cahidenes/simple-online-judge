{
    "0": {
        "id": "0",
        "title": "Example Resource",
        "text": "Bu \u00f6rnek bir resource'dur.\n\n# Bu bir ba\u015fl\u0131kt\u0131r.\n\nYukar\u0131daki ba\u015fl\u0131k nas\u0131l\n\n## Bu da bir alt ba\u015fl\u0131k\n\n- Bu bir item\n- Bu da di\u011fer item\n\naraya yaz\u0131 atsam nas\u0131l olur\n\n1. Bu saymal\u0131 item\n2. Bu da di\u011feri\n\nburaya da yaz\u0131\n\n- yeni\n- list\n- item\n\nburaya da\n\n> Bu da bir callout\n\n| Bu da benim calloutum\n\n---\n\nA\u015fa\u011f\u0131da bir kod veriliyor\n\n```\nprint(\"hello world!\")\n```\n\nYukar\u0131daki kod hello world basmaktad\u0131r.\n\n```\n# get name\nname = input(\"ismin nedir?\")\n\n# print name\nprint(\"hello,\", name)\n---\ncahid\n```\n\nYukar\u0131daki kod da **hello, cahid** basmaktad\u0131r.\n\n*Bu sat\u0131r yeni*",
        "section": "default"
    },
    "1": {
        "id": "1",
        "title": "M\u00fcfredat",
        "text": "## Konular\n\n- **1. Hafta:** Tan\u0131\u015fma, De\u011fi\u015fkenler, if, list, D\u00f6ng\u00fcler\n- **2. Hafta:** Fonksiyonlar, mutability, recursion\n- **3. Hafta:** Algoritma Analizi\n- **4. Hafta:** Hata mesajlar\u0131, try except, debugging\n- **5. Hafta:** import, I/O, regex\n- **6. Hafta:** dict, json, csv\n- **7. Hafta:** requests, API\n- **8. Hafta:** web scraping\n- **9. Hafta:** dokumantasyon okuma, telegram bot\n- **10. Hafta:** LLM Kullan\u0131m\u0131\n- **11. Hafta:** ChatGPT nas\u0131l kullan\u0131l\u0131r?, PyGame\n- **12. Hafta:** Final\n\nKonular duruma g\u00f6re de\u011fi\u015febilir.\n\n## Puanlama\n\nFinal haftas\u0131 hari\u00e7 her hafta \u00e7\u00f6zmeniz gereken sorular olacak. Bu sorular her hafta toplam **10 puan** olacak. Final s\u0131nav\u0131 da **20 puan** olacak. Toplam puan\u0131n\u0131z **130 puan** \u00fczerinden olacak. (100 \u00fczerinde not al\u0131rsan\u0131z 100 alm\u0131\u015f oluyorsunuz). Bunun yan\u0131nda \u00e7e\u015fitli zamanlarda bonus sorular da koyabilirim.\n\n## Haftal\u0131k Sorular\n\nHer hafta bu sitede \u00e7\u00f6zmeniz gereken sorular yay\u0131nlanacak. Soruyu \u00e7\u00f6zmek i\u00e7in uygun kodu yaz\u0131p g\u00f6ndermeniz gerekmekte. Kodunuzun do\u011fru olup olmad\u0131\u011f\u0131 hemen size s\u00f6ylenecek. S\u0131n\u0131rs\u0131z kod g\u00f6nderme hakk\u0131n\u0131z var, do\u011fru yapana kadar u\u011fra\u015fabilirsiniz.\n\nHer sorunun puan\u0131 soru metninin alt\u0131nda yazacak. Ayn\u0131 zamanda skor tablosunda da hangi sorudan ka\u00e7 puan ald\u0131\u011f\u0131n\u0131z\u0131 / toplam puan\u0131n\u0131z\u0131 g\u00f6rebilirsiniz.\n\nHer haftaki sorular o haftaki derste a\u00e7\u0131lacak. **Dersin ba\u015f\u0131nda ise \u00f6nceki haftaki sorulara g\u00f6nderimler kapanacak!** Sorulardan puan almak i\u00e7in zaman\u0131nda \u00e7\u00f6zmeniz gerekmektedir.\n\n## Kaynaklar\n\nHer hafta i\u015flenen konular\u0131n konu anlat\u0131m\u0131 da bu kaynaklar b\u00f6l\u00fcm\u00fcne eklenecek (\u00e7ok detayl\u0131 olmayacak, her t\u00fcrl\u00fc derse gelmeniz daha iyi). Gelmedi\u011finiz haftaki konular\u0131 buralardan \u00e7al\u0131\u015fabilirsiniz veya final i\u00e7in \u00e7al\u0131\u015fmalar\u0131n\u0131z\u0131 buralardan yapabilirsiniz. Ayn\u0131 zamanda derste yazd\u0131\u011f\u0131m kodlar\u0131 da koyaca\u011f\u0131m.\n\nKaynaklarda verilen kodlar\u0131 de\u011fi\u015ftirip \u00e7al\u0131\u015ft\u0131rabilirsiniz. Bunu yapman\u0131z \u015fiddetle \u00f6nerilir.\n\n## Yoklama\n\nYoklamay\u0131 kendi puanlama sistemime koymayaca\u011f\u0131m ancak \u0130sar'\u0131n yoklama politikas\u0131 ge\u00e7erli.\n\n## Yapay Zeka Asistan\u0131 Kullan\u0131m\u0131\n\nBu ders boyunca, sorular\u0131n \u00e7\u00f6z\u00fcm\u00fcnde, a\u00e7\u0131k\u00e7a belirtilmedi\u011fi s\u00fcrece ChatGPT gibi yapay zekal\u0131 asistan kullan\u0131lmas\u0131 **Kesinlikle Yasakt\u0131r!**. Buna kod yazd\u0131rmadan konuyu sormak / fikir dan\u0131\u015fmak da dahil. S\u0131n\u0131fta bana veya arkada\u015flar\u0131n\u0131za sormak istediklerinizi sorabilirsiniz (arkada\u015flar\u0131n\u0131z\u0131n kodunu yazmay\u0131n, kodunuzu vermeyin). S\u0131n\u0131fta de\u011filken sormak istediklerinizi de bana her zaman mesaj yazarak sorabilirsiniz.\n\nYapay zekaya kar\u015f\u0131 de\u011filim, bu yasa\u011f\u0131 koymam\u0131n sebebini s\u0131n\u0131fta tart\u0131\u015faca\u011f\u0131m :)\n\n",
        "section": "6"
    },
    "2": {
        "id": "2",
        "title": "Python Temel",
        "text": "## De\u011fi\u015fkenler\n\nVeri tutan \u015feylere de\u011fi\u015fken denir. A\u015fa\u011f\u0131daki kodu inceleyin.\n\n```\na = 3\ndegisken = 'nasilsin'\nbaska_degisken = True\n```\n\nburada a de\u011fi\u015fkeninin ad\u0131 *a*, de\u011feri *3*, tipi ise *int* yani tam say\u0131d\u0131r. G\u00f6r\u00fcld\u00fc\u011f\u00fc \u00fczere de\u011fi\u015fkenler farkl\u0131 tipte de\u011ferler alabilir.\n\n- **int:** tam say\u0131. 3, 6545, 0, -23 gibi de\u011ferler olabilir.\n- **float:** k\u00fcs\u00fcratl\u0131 say\u0131. 2.45, 3.0, 123.4567 gibi de\u011ferler olabilir.\n- **str:** metin. metinler \u00e7ift t\u0131rnak (\") veya tek t\u0131rnak (') aras\u0131na yaz\u0131lmal\u0131d\u0131r. \u00f6rnek de\u011ferler: \"bu bir metindir\", 'bu da bir metindir.', \"\"\n- **bool:** \u00f6nerme. sadece iki de\u011fer alabilir: True ve False.\n- **None:** bu asl\u0131nda bir tip de\u011fil, de\u011fi\u015fkenin hi\u00e7bir de\u011feri olmad\u0131\u011f\u0131n\u0131 belirtiyor.\n\n```\nint_degisken = 5\nfloat_degisken = 5.12\nstr_degisken = 'sa'\nbool_degisken = True\nNone_degisken = None\n```\n\nAsl\u0131nda daha fazla de\u011fi\u015fken tipi var ancak \u015fimdilik bu kadar\u0131 yeterli.\n\n## Print\n\nDe\u011fi\u015fkenleri veya de\u011ferleri g\u00f6rmek i\u00e7in *print* fonksiyonunu kullanmam\u0131z gerekiyor. Fonksiyonun kullan\u0131m\u0131 \u015fu \u015fekilde:\n\n```\na = 5\nprint(a)\n```\n\nPrint fonksiyonuna de\u011fi\u015fken vermek yerine direk de\u011fer de verebiliyoruz:\n\n```\nprint('SA')\n```\n\nYine print fonksiyonuna de\u011ferleri virg\u00fcl ile ay\u0131rarak verirsek yan yana yaz\u0131yor. Birden fazla print yazarsak ise alt alta yaz\u0131yor.\n\n```\na = 4\nb = True\n\nprint(a, 5)\nprint(b)\n```\n\n| Bir de\u011fi\u015fkenin tipini g\u00f6rmek i\u00e7in *type(a)* fonksiyonunu kullanabiliriz.\n\n## Operat\u00f6rler\n\nDe\u011fi\u015fkenler \u00fczerinde i\u015flem yapmam\u0131z\u0131 sa\u011flayan sembollere operat\u00f6r denir. Temel operat\u00f6rler \u015funlard\u0131r:\n\n- **+:** *int* ve *float* tiplerinde toplama yapar, *str* t\u00fcrlerinde ise metinleri art arda birle\u015ftirir.\n\n```\na = 1 + 2\nprint(type(a), a)\n\nb = 1 + 2.1\nprint(type(b), b)\n\nc = 1.2 + 3.8\nprint(type(c), c)\n\nd = 'abc' + 'def'\nprint(d)\n```\n\n- **-:** *int* ve *float* tiplerinde \u00e7\u0131karma i\u015flemi yapar.\n\n```\na = 1 - 2\nprint(type(a), a)\n\nb = 1 - 2.1\nprint(type(b), b)\n\nc = 1.2 - 3.7\nprint(type(c), c)\n```\n\n-** *: ** *int* ve *float* tiplerinde \u00e7arpma i\u015flemi yapar. Ayn\u0131 zamanda *str* ile *int* \u00e7arp\u0131l\u0131rsa *str* say\u0131 kadar tekrar edilir.\n\n```\na = 3 * 5\nprint(type(a), a)\n\nb = 3 * 5.5\nprint(type(b), b)\n\nprint('hello' * 10)\n```\n\n- **/:** *int* ve *float* tiplerinde b\u00f6lme i\u015flemi yapar. Sonu\u00e7 *float* olur.\n- **//:** *int* ve *float* tiplerinde kalans\u0131z b\u00f6lme i\u015flemi yapar. Sonu\u00e7 *int* olur.\n- **%:** *int* ve *float* tiplerinde b\u00f6l\u00fcmden kalan\u0131 verir.\n\n```\nprint(8 / 3)\nprint(8 // 3)\n\nprint(8.5 / 3.1)\nprint(8.5 // 3.1)\n\nprint(8 % 3)\nprint(8.5 % 3.1)\n```\n\n- **: *int* ve *float* tiplerinde \u00fcs alma i\u015flemi yapar.\n\n```\na = 2 ** 5\nprint(type(a), a)\n\nb = 2 ** 5.2\nprint(type(b), b)\n\nc = 5.3 ** -3\nprint(type(c), c)\n\nd = 4 ** 0.5\nprint(type(d), d) \n```\n\nBirden fazla i\u015flemi birden kullanabiliriz. Burada i\u015flem \u00f6nceli\u011fi \u015fu \u015fekildedir:\n\n| Parantez > ** > *, /, // > +, -\n\n```\nprint((3 + 2) ** 2 + 5 * 4)\n```\n\n## Input\n\nKullan\u0131c\u0131dan girdi almak i\u00e7in *input()* fonksiyonunu kullan\u0131yoruz.\n\n| Kullan\u0131c\u0131 program\u0131 kulland\u0131\u011f\u0131 terminalden girdisini yapmaktad\u0131r. Bu sitede kullan\u0131c\u0131 girdisi sa\u011f taraftaki yaz\u0131 olacakt\u0131r. As\u0131l davran\u0131\u015f i\u00e7in kendi bilgisayar\u0131n\u0131zda deneyiniz.\n\n```\na = input()\nprint(a)\n---\npython\n```\n\ninput() fonksiyonu her zaman **str** d\u00f6nd\u00fcr\u00fcr. Kullan\u0131c\u0131dan ya\u015f gibi say\u0131sal de\u011fer almak istedi\u011fimizde sonradan onu inte \u00e7evirmemiz gerekmektedir.\n\n```\nprint(\"Ya\u015f\u0131n\u0131z nedir?\")\nyas = input()\nprint(yas * 4)\n---\n20\n```\n\n## De\u011fi\u015fken Tip D\u00f6n\u00fc\u015f\u00fcm\u00fc\n\nBir de\u011fi\u015fkenin di\u011fer tipini ba\u015fka bir de\u011fi\u015fkene \u00e7evirmek istedi\u011fimizde *int()*, *float()*, *str()*, *bool()* gibi fonksiyonlar\u0131 kullan\u0131r\u0131z.\n\n```\na = int(3.14)\nprint(type(a), a)\n\nb = float(5)\nprint(type(b), b)\n\nc = str(571)\nprint(type(c), c)\n\nd = int(\"15\")\nprint(type(d), d)\n```\n\n\u00d6rne\u011fin kullan\u0131c\u0131dan ald\u0131\u011f\u0131m\u0131z bir say\u0131sal girdi ile i\u015flem yapabilmek i\u00e7in inte \u00e7evirmemiz gerekmektedir.\n\n```\nyas_str = input()\nyas_int = int(yas_str)\nprint(yas_int * 4)\n```\n\nVeya bir int de\u011feri bir metin ile eklemek istiyorsak \u00f6nce str tipine \u00e7evirmemiz gerekmektedir.\n\n```\nyas = 20\nmetin = '\u015eu an ' + str(yas) + ' ya\u015f\u0131ndas\u0131n\u0131z.'\nprint(metin)\n```\n\n## String Format\n\nTek t\u0131rnak aras\u0131nda olan bir stringin i\u00e7inde tek t\u0131rnak koymak istiyorsak ba\u015f\u0131na ters sla\u015f (\\) koyarak \"escape\" etmemiz gerekiyor. Veya string'i \u00e7ift t\u0131rnak aras\u0131na yazarak da yapabiliriz.\n\n```\nprint('\u0130stanbul\\'day\u0131m')\nprint(\"\u0130stanbul'day\u0131m\")\n```\n\nE\u011fer \\ yazmak istiyorsak yine ba\u015f\u0131na \\ koyarak escape ediyoruz.\n\n```\nprint(\"1 \\\\ 0\")\n```\n\n\\ kullanarak baz\u0131 \u00f6zel karakterler de yazabiliyoruz.\n\n- \\n: Sat\u0131r sonu karakteri (enter tu\u015funa bast\u0131\u011f\u0131n\u0131zda yaz\u0131lan karakter)\n- \\t: Tab karakteri\n\n```\nprint('ab\\t123\\tx\\na\\t12\\txyz')\n```\n\n## Condition\n\nCondition, sonucu True veya False olan bir i\u015flem b\u00fct\u00fcn\u00fcd\u00fcr. Asl\u0131nda bir bool'dur. if ve while gibi yap\u0131larda i\u015fimize yarayacak.\n\n- == ve is: iki de\u011fi\u015fkenin e\u015fit olup olmad\u0131\u011f\u0131n\u0131 kontrol eder. Asl\u0131nda bu ikisi aras\u0131nda bir fark var, daha sonra a\u00e7\u0131klanacak.\n- != ve is not: iki degi\u015fkenin e\u015fit olmad\u0131\u011f\u0131na bakar.\n- <, <=, >, >=: iki de\u011fi\u015fkenin s\u0131ras\u0131yla b\u00fcy\u00fck, b\u00fcy\u00fck e\u015fit, k\u00fc\u00e7\u00fck ve k\u00fc\u00e7\u00fck e\u015fit oldu\u011funu kontrol eder.\n- not: sa\u011f\u0131na gelen condition'\u0131 ters \u00e7evirir\n- and, or: iki condition'\u0131 ve / veya ba\u011flac\u0131yla birbirine ba\u011flar\n- True, False: Do\u011fru ve yanl\u0131\u015f de\u011ferleri belirtir.\n\n```\nprint(3 == 3)\nprint(3 is 3)\nprint(3 != 4)\nprint(3 is not 4)\nprint(3 < 4)\nprint(3 <= 4)\nprint(4 > 3)\nprint(4 >= 3)\nprint(2 < 3 and 3 < 4)\nprint(3 < 1 or 1 < 3)\nprint(1 == 0 or True)\n```\n\n## if\n\nBir kod blokunu sadece belli bir durumda \u00e7al\u0131\u015ft\u0131rmak i\u00e7in if kullan\u0131r\u0131z.\n\n```\na = 5\nif a < 10:\n    print(\"a 10'dan k\u00fc\u00e7\u00fckt\u00fcr\")\n```\n\nBu kodda print kodu sadece a < 10 \u015fart\u0131 ge\u00e7erli oldu\u011funda \u00e7al\u0131\u015facakt\u0131r. a'n\u0131n de\u011ferini de\u011fi\u015ftirerek test ediniz.\n\nif blokunun i\u00e7indeki kodun ba\u015f\u0131nda bir bo\u015fluk oldu\u011funa dikkat ediniz. Buna indentation denmektedir. Hangi kodun if'in i\u00e7inde, hangi kodun da d\u0131\u015f\u0131nda oldu\u011funu belirtmek i\u00e7in indentation kullan\u0131r\u0131z. \u00d6rne\u011fi inceleyin.\n\n```\na = 15\nif a < 10:\n    print(\"a 10'dan k\u00fc\u00e7\u00fckt\u00fcr\")\nprint(\"g\u00fcle g\u00fcle\")\n```\n\nBu kodda \u015fart ge\u00e7ersiz oldu\u011fu i\u00e7in ilk print \u00e7al\u0131\u015fmad\u0131, fakat ikinci print if blokunun i\u00e7inde olmad\u0131\u011f\u0131 i\u00e7in \u00e7al\u0131\u015ft\u0131.\n\nSadece \u015fart\u0131n ge\u00e7ersiz oldu\u011fu durumlarda \u00e7al\u0131\u015facak kodu belirtmek i\u00e7in ise else kullan\u0131yoruz.\n\n```\na = 5\nif a < 10:\n    print(\"a 10'dan k\u00fc\u00e7\u00fckt\u00fcr\")\nelse:\n    print(\"a 10'dan k\u00fc\u00e7\u00fck de\u011fildir\")\n```\n\nBirden fazla \u015fart eklemek i\u00e7in ise elif (else if k\u0131saltmas\u0131) kullan\u0131yoruz\n\n```\na = 5\nif a < 10:\n    print(\"a 10'dan k\u00fc\u00e7\u00fckt\u00fcr\")\nelif a <= 20:\n    print(\"a 10 ile 20 aras\u0131ndad\u0131r\")\nelif a <= 30:\n    print(\"a 21 ile 30 aras\u0131ndad\u0131r\")\nelse:\n    print(\"a 30'dan b\u00fcy\u00fckt\u00fcr\")\n```\n\nbu \u015fekilde elif'lerin say\u0131s\u0131n\u0131 istedi\u011fimiz kadar art\u0131rabiliriz.\n\nbool d\u0131\u015f\u0131ndaki t\u00fcrler de condition olarak kullan\u0131labilir.\n\n- int e\u011fer 0 ise False, de\u011filse (negatif dahil) True kabul edilir.\n- str e\u011fer bo\u015fsa False, de\u011filse (i\u00e7inde ne oldu\u011fundan ba\u011f\u0131ms\u0131z) True kabul edilir\n- None False kabul edilir\n\n```\na = 5\ns = 'abc'\nif a and s:\n    print(a, s)\nelse:\n    print('no')\n```\n",
        "section": "6"
    },
    "3": {
        "id": "3",
        "title": "String",
        "text": "Metin i\u00e7eren de\u011fi\u015fken t\u00fcr\u00fcne string (k\u0131saca str) denir. Tek t\u0131rnak (') ya da \u00e7ift t\u0131rnak (\") aras\u0131na yaz\u0131lan metinler string'tir.\n\n```\nprint('Python \u00e7ok kolay')\nprint(\"Python \u00e7ok kolay\")\n```\n\n",
        "section": "6"
    },
    "4": {
        "id": "4",
        "title": "Liste",
        "text": "Birden fazla veriyi bir de\u011fi\u015fkende saklamak istedi\u011fimizde liste kullan\u0131r\u0131z. K\u00f6\u015feli parantez ([]) aras\u0131na virg\u00fclle ay\u0131rarak de\u011ferler yazd\u0131\u011f\u0131m\u0131zda liste olur.\n\n```\nl = [1, 23.45, \"hehe\", True]\nprint(l)\n```\n\nListenin i\u00e7ine de\u011fi\u015fken de koyabiliriz. Hatta ba\u015fka bir liste bile koyabiliriz.\n\n```\na = 5\nl1 = [1, 2, a]\nl2 = [\"metin\", l1, \"abc\", []]\nprint(l2)\n```\n\nlen() fonksiyonu ile listenin i\u00e7inde ka\u00e7 tane eleman oldu\u011funu \u00f6\u011frenebiliriz.\n\n```\nl1 = []\nl2 = [0, 0, 0]\nl3 = [1, 2, 3, 4, 5, [6, 7, 8]]\nprint(len(l1))\nprint(len(l2))\nprint(len(l3))\n```\n\n## Listenin Elemanlar\u0131na Eri\u015fme\n\nListenin elemanlar\u0131na [] operat\u00f6r\u00fc ile ula\u015f\u0131r\u0131z. A\u015fa\u011f\u0131daki \u00f6rne\u011fi inceleyin.\n\n```\nl = [\"ilk eleman\", \"ikinci eleman\", \"\u00fc\u00e7\u00fcnc\u00fc eleman\"]\nprint(l[0])\nprint(l[1])\nprint(l[2])\n```\n\nListenin ilk eleman\u0131na ula\u015fmak i\u00e7in yan\u0131na [0] yaz\u0131yoruz. K\u00f6\u015feli parantez i\u00e7ine yazd\u0131\u011f\u0131m\u0131z de\u011fere *\"index\"* deniyor.\n\n| Indexler 1'den de\u011fil, 0'dan ba\u015flar!\n\nYukar\u0131daki \u00f6rnekte liste 3 elemanl\u0131 olmas\u0131na ra\u011fmen [3] yazd\u0131\u011f\u0131m\u0131zda hata verecektir. \u00c7\u00fcnk\u00fc son eleman 2. indextedir. Deneyiniz.\n\nIndexler eksiye de gidebilir. Eksi elemanlar listenin sonundan ba\u015flar. Yani -1. index son eleman, -2. index sondan ikinci elemand\u0131r.\n\n```\nl = [\"ilk eleman\", \"ikinci eleman\", \"\u00fc\u00e7\u00fcnc\u00fc eleman\"]\nprint(l[-1])\nprint(l[-2])\nprint(l[-3])\n```\n\n## Slicing\n\nIndexleri kullanarak birden fazla eleman da se\u00e7ebiliriz. Buna *slicing* denir. Slicing ile bir eleman de\u011fil, birden fazla eleman\u0131n bulundu\u011fu bir liste elde etmi\u015f oluruz.\n\n```\nl = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\nprint(l[3:6])\nprint(l[1:-1])\n```\n\n| Slicing yaparken verdi\u011fimiz ilk index aral\u0131\u011fa dahil, ikinci index ise aral\u0131\u011fa dahil de\u011fildir!\n\nSlicing yaparken ilk ve ikinci indexi yazmayabiliriz. Yazmad\u0131\u011f\u0131m\u0131z ilk index en ba\u015ftan kabul edilir, ikinci index ise en sondan kabul edilir. Yani ba\u015ftan n. indexe kadar almak istiyorsak [:n], n. indexten sona kadar almak istiyorsak [n:] yazabiliriz.\n\n```\nl = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\nprint(l[:6])\nprint(l[3:])\nprint(l[:])\n```\n\nSlicing yaparken 3. bir index daha verirsek bu ad\u0131m say\u0131s\u0131 demek olur. Yani 2 verirsek iki\u015fer atlayarak ver demektir.\n\n```\nl = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\nprint(l[1:8:2])\nprint(l[::3])\nprint(l[::-1])\n```\n\n## Conditions\n\nDaha \u00f6nceden g\u00f6rd\u00fc\u011f\u00fcm\u00fcz condition'lara benzer listeye \u00f6zel bir operat\u00f6r var: *in*. Bir eleman\u0131n listede olup olmad\u0131\u011f\u0131n\u0131 kontrol eder. Ayn\u0131 \u015fekilde *not in* operat\u00f6r\u00fc de listede olmad\u0131\u011f\u0131n\u0131 kontrol eder.\n\n```\na = int(input())\nl = [1, 3, 5]\nif a in l:\n    print(\"l'nin i\u00e7inde var.\")\n---\n3\n```",
        "section": "6"
    }
}